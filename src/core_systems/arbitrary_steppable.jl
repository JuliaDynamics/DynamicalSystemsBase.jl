
"""
    ArbitrarySteppable <: DiscreteTimeDynamicalSystem
    ArbitrarySteppable(model, step, extract_state, extract_parameters, reset_model)

A dynamical system generated by an arbitrary "model" that can be stepped in-place
with some function `step(model)` for 1 step, or `step(model, dt)` for `dt` steps.
The state of the model is extracted by the `extract_state(model) -> u` function
The parameters of the model are extracted by the `extract_parameters(model) -> p` function.
The system may be re-initialized, via [`reinit!`](@ref), with the `reset_model`
user-provided function that must have the call signature
```julia
reset_model(model, u; p)
```
given a potentially new state `u` and parameter container `p`.

`ArbitrarySteppable` exists to provide the DynamicalSystems.jl interface to models from
other packages that could be used within the DynamicalSystems.jl library.
`ArbitrarySteppable` follows the [`DynamicalSystem`](@ref) interface with
the following adjustments:

- [`initial_time`](@ref) is always 0, as time counts the steps the model has
  taken since creation or last [`reinit!`](@ref) call.
"""
struct ArbitrarySteppable{M, F, R, ES, EP, U, P} <: DiscreteTimeDynamicalSystem
    model::M
    step::F
    reinit::R
    extract_state::ES
    extract_parameters::EP
	t::RefValue{Int}
    u0::U
    p0::P
end
